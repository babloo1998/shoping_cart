{"ast":null,"code":"import _objectSpread from \"/home/ttn/cart/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/ttn/cart/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport products from '../Product_details';\nvar initialState = {\n  items: products,\n  addedItems: [],\n  total: 0\n};\n\nvar cartReducer = function cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      {\n        var index = state.addedItems.findIndex(function (item) {\n          return action.id === item.id;\n        });\n\n        var _products = _toConsumableArray(state.items);\n\n        var prodIndex = _products.findIndex(function (item) {\n          return action.id === item.id;\n        });\n\n        _products[prodIndex].quantity -= 1;\n\n        if (index !== -1) {\n          var addedItemList = _toConsumableArray(state.addedItems);\n\n          var addedItem = addedItemList[index];\n          addedItem.quantity += 1;\n          return _objectSpread({}, state, {\n            items: _products,\n            addedItems: addedItemList,\n            total: state.total + addedItem.price\n          });\n        } else {\n          var newItemIndex = state.items.findIndex(function (item) {\n            return item.id === action.id;\n          });\n\n          if (newItemIndex !== -1) {\n            var newItem = _objectSpread({}, state.items[newItemIndex]);\n\n            newItem.quantity = 1;\n            return _objectSpread({}, state, {\n              items: _products,\n              addedItems: [].concat(_toConsumableArray(state.addedItems), [newItem]),\n              total: state.total + newItem.price\n            });\n          }\n\n          return _objectSpread({}, state);\n        }\n      }\n\n    case \"REMOVE_ITEM\":\n      {\n        var itemToRemove = state.addedItems.find(function (item) {\n          return action.id === item.id;\n        });\n        var new_items = state.addedItems.filter(function (item) {\n          return action.id !== item.id;\n        });\n        var newTotal = state.total - itemToRemove.price * itemToRemove.quantity;\n        console.log(itemToRemove);\n        return _objectSpread({}, state, {\n          addedItems: new_items,\n          total: newTotal\n        });\n      }\n\n    case \"ADD_QUANTITY\":\n      {\n        var _index = state.addedItems.findIndex(function (item) {\n          return action.id === item.id;\n        });\n\n        var _products2 = _toConsumableArray(state.items);\n\n        var _prodIndex = _products2.findIndex(function (item) {\n          return action.id === item.id;\n        });\n\n        _products2[_prodIndex].quantity -= 1;\n\n        if (_index !== -1) {\n          var _addedItemList = _toConsumableArray(state.addedItems);\n\n          var _addedItem = _addedItemList[_index];\n          _addedItem.quantity += 1;\n          return _objectSpread({}, state, {\n            items: _products2,\n            addedItems: _addedItemList,\n            total: state.total + _addedItem.price\n          });\n        }\n      }\n\n    case \"SUB_QUANTITY\":\n      {\n        var _index2 = state.addedItems.findIndex(function (item) {\n          return action.id === item.id;\n        });\n\n        var _products3 = _toConsumableArray(state.items);\n\n        var _prodIndex2 = _products3.findIndex(function (item) {\n          return action.id === item.id;\n        });\n\n        _products3[_prodIndex2].quantity += 1;\n\n        if (_index2 !== -1) {\n          var _addedItemList2 = _toConsumableArray(state.addedItems);\n\n          var _addedItem2 = _addedItemList2[_index2];\n          _addedItem2.quantity -= 1;\n          return _objectSpread({}, state, {\n            items: _products3,\n            addedItems: _addedItemList2,\n            total: state.total - _addedItem2.price\n          });\n        }\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/home/ttn/cart/src/Components/reducers/cartReducer.js"],"names":["products","initialState","items","addedItems","total","cartReducer","state","action","type","index","findIndex","item","id","prodIndex","quantity","addedItemList","addedItem","price","newItemIndex","newItem","itemToRemove","find","new_items","filter","newTotal","console","log"],"mappings":"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","sourcesContent":["import products from '../Product_details';\n\nconst initialState = {\n    items: products,\n    addedItems:[],\n    total: 0\n}\n\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_TO_CART\": {\n      let index = state.addedItems.findIndex(item => action.id === item.id);\n      const products = [...state.items];\n      const prodIndex = products.findIndex(item => action.id === item.id);\n      products[prodIndex].quantity -= 1;\n      if (index !== -1) {\n        const addedItemList = [...state.addedItems];\n        const addedItem = addedItemList[index];\n        addedItem.quantity += 1;\n        return {\n          ...state,\n          items: products,\n          addedItems: addedItemList,\n          total: state.total + addedItem.price\n        };\n      } \n      else \n      {\n        let newItemIndex = state.items.findIndex(item => item.id === action.id);\n        if (newItemIndex !== -1) {\n          let newItem = { ...state.items[newItemIndex] };\n          newItem.quantity = 1;\n          return {\n            ...state,\n            items: products,\n            addedItems: [...state.addedItems, newItem],\n            total: state.total + newItem.price\n          };\n        }\n        return {\n          ...state\n        };\n      }\n    }\n   \n    case \"REMOVE_ITEM\": \n    {\n      let itemToRemove = state.addedItems.find(item => action.id === item.id);\n      let new_items = state.addedItems.filter(item => action.id !== item.id);\n\n     \n      let newTotal = state.total - itemToRemove.price * itemToRemove.quantity;\n      console.log(itemToRemove);\n      return {\n        ...state,\n        addedItems: new_items,\n        total: newTotal\n      };\n    }\n\n    case \"ADD_QUANTITY\": \n    {\n      let index = state.addedItems.findIndex(item => action.id === item.id);\n      const products = [...state.items];\n      const prodIndex = products.findIndex(item => action.id === item.id);\n      products[prodIndex].quantity -= 1;\n      if (index !== -1) {\n        const addedItemList = [...state.addedItems];\n        const addedItem = addedItemList[index];\n        addedItem.quantity += 1;\n        return {\n          ...state,\n          items: products,\n          addedItems: addedItemList,\n          total: state.total + addedItem.price\n        };\n      }\n    }\n\n    case \"SUB_QUANTITY\": \n    {\n      let index = state.addedItems.findIndex(item => action.id === item.id);\n      const products = [...state.items];\n      const prodIndex = products.findIndex(item => action.id === item.id);\n      products[prodIndex].quantity += 1;\n      if (index !== -1) {\n        const addedItemList = [...state.addedItems];\n        const addedItem = addedItemList[index];\n        addedItem.quantity -= 1;\n        return {\n          ...state,\n          items: products,\n          addedItems: addedItemList,\n          total: state.total - addedItem.price\n        };\n      }\n    }\n\n    default: \n    {\n      return state;\n    }\n  }\n};\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}